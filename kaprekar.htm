<!DOCTYPE html>
<!-- 
    (c)2022 by Araz Yusubov 
    DISCLAIMER: This code is a quick hack intended to present a working prototype.
    Hence it does not follow best practice of programming or software engineering.
-->
<html>
    <head><title>Kaprekar</title></head>
    <body>
        <script>
            var allnumbers = [];
            var reportlines = [];
            var onlyKaprekar = false;
            var onlyGenerator = false;

            function getNumber(a) {
                if (Array.isArray(a)) {
                    return a.join('');
                } else {
                    return undefined;
                }
            }

            // Subtract two integers stored as strings of the same length
            function subtract(n1, n2) {
                // console.log(n1, n2);
                let len = n1.length;
                let n3 = '';
                var carry = 0;
                for (var i = len; i > 0; i--) {
                    let d = n1[i-1] - n2[i-1] - carry;
                    if (d < 0) {
                        d = d + 10;
                        carry = 1;
                    } else {
                        carry = 0;
                    }
                    // console.log(d);
                    n3 = d.toString() + n3;
                    // console.log(n3);
                }
                return n3;
            }

            // Add two integers stored as strings of the same length
            function add(n1, n2) {
                // console.log(n1, n2);
                let len = n1.length;
                let n3 = '';
                var carry = 0;
                for (var i = len; i > 0; i--) {
                    let d = n1[i-1] + n2[i-1] + carry;
                    if (d >= 10) {
                        d = d - 10;
                        carry = 1;
                    } else {
                        carry = 0;
                    }
                    n3 = d.toString() + n3;
                }
                return n3;
            }

            // Increment by one an integer stored as string
            function inc(n1) {
                let len = n1.length;
                let n3 = '';
                var a = 1;
                var carry = 0;
                for (var i = len; i > 0; i--) {
                    let d = Number(n1[i-1]) + a + carry;
                    a = 0;
                    if (d >= 10) {
                        d = d - 10;
                        carry = 1;
                    } else {
                        carry = 0;
                    }
                    // console.log(d);
                    n3 = d.toString() + n3;
                    if (carry == 0) break;
                    // console.log(n3);
                }
                n3 = n1.substring(0, i-1) + n3;
                if (carry == 1) n3 = '1' + n3;
                return n3;
            }

            function lunchGenerate() {
                onlyKaprekar = false;
                onlyGenerator = false;
                reportlines = [];
                //let number = Number(document.getElementById("numInput").value);
                let number = document.getElementById("numInput").value;
                document.getElementById("txtOutput").value += "\nStart generating for "+ number; 
                Generate(number.toString(), 0, true);
                document.getElementById("txtOutput").value = reportlines.join('\n');
            }

            async function Generate(startnumber, idx, details) {
                let newnumber = startnumber;
                allnumbers = [];
                do {
                    // Add new number and icrement the index
                    allnumbers.push(newnumber);
                    idx++;
                    // If you look for only Kaprekar numbers then no need to continue
                    if (onlyKaprekar && (idx > 1)) break;
                    // If you look for only direct generator numbers then no need to continue
                    if (onlyGenerator && (idx > 2)) break;
                    digits = Array.from(String(newnumber));
                    // Sort by ascending order
                    digits.sort(function(a, b){return b-a});
                    let number1 = getNumber(digits);
                    // Sort by descending order
                    digits.sort(function(a, b){return a-b});
                    let number2 = getNumber(digits);
                    // Calculate the next number;
                    //number3 = number1 - number2;
                    number3 = subtract(number1, number2);
                    // Add leading zeroes if needed
                    // while (number3.toString().length < newnumber.toString().length) number3 = "0" + number3;
                    // Add new calculation line to the output
                    if (details) {
                        //document.getElementById("txtOutput").value += "\n"+ idx +": "+ number1 +"-"+ number2 +"="+ number3;
                        reportlines.push(idx +": "+ number1 +"-"+ number2 +"="+ number3);
                    }
                    newnumber = number3;
                } while ((!allnumbers.includes(number3)) /*&& (idx < 100)*/);
                // If you look for only Kaprekar numbers then leave without reporting
                if (onlyKaprekar && (idx > 1)) return false;
                let idx0 = allnumbers.indexOf(number3);
                // If you look for only direct generator numbers then leave without reporting
                if (onlyGenerator && ((idx > 2) || (idx0 == 0))) return false;
                reportlines.push(startnumber +" "+ idx +" "+ idx0 +" "+ (idx - idx0) +" "+ number3 +" "+ allnumbers.includes(number3));
                //console.log(startnumber);
            }

            function Clean() {
                reportlines = [];
                document.getElementById("txtOutput").value = "";
            }

            function allGenerate() {
                onlyKaprekar = document.getElementById("checkKaprekar").checked;
                onlyGenerator = document.getElementById("checkGenerator").checked;
                Clean();
                let input = document.getElementById("numInput").value;
                let start = "1" + "0".repeat(input.length - 1);
                let stop = "9".repeat(input.length);
                // let startN = Number(start);
                // let stopN = Number(stop);
                //console.log(startN, stopN);
                // for (var n = startN; n <= stopN; n++) {
                //     Generate(n, 0, false);
                // }
                n = start;
                while (n.length == start.length) {
                    Generate(n, 0, false);
                    n = inc(n);
                }
                document.getElementById("txtOutput").value = reportlines.join('\n');

                // Create a hidden anchor element to activate file download
                var a = document.createElement("a");
                a.href = window.URL.createObjectURL(new Blob([reportlines.join('\n')], {type: "text/plain"}));
                a.download = `kaprekar-${input.length}${onlyKaprekar ? '-const' : ''}${onlyGenerator ? '-genr' : ''}.txt`;
                a.click(); 
                
            }

        </script>
        <input id="numInput" type="number">
        <br>
        <textarea id="txtOutput" cols="50" rows="10">Kaprekar v1.7 (c) 2022 by Araz Yusubov</textarea>
        <br>
        <input id="btnCalculate" type="button" value="Calculate" onclick="lunchGenerate();">&nbsp;
        <input id="btnClean" type="button" value="Clean" onclick="Clean();">
        <br>
        <input id="btnCalculateAll" type="button" value="Calculate for all N-digit numbers" onclick="allGenerate();">&nbsp;
        <br>
        <input name="filter" id="checkAll" type="radio" value="all" checked="true">&nbsp;
        <label for="checkAll">All numbers</label>
        <input name="filter" id="checkKaprekar" type="radio" value="kaprekar">&nbsp;
        <label for="checkKaprekar">Only Kaprekar constants</label>
        <input name="filter" id="checkGenerator" type="radio" value="generator">&nbsp;
        <label for="checkGenerator">Only direct generators</label>
    </body>
</html>